version: '3.9'

networks:
  diabete-net:
    driver: bridge

services:
  patientservice:
    build:
      context: .
      dockerfile: PatientService/Dockerfile
    ports:
      - "5000:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      sqlserver:
        condition: service_healthy
    networks:
      - diabete-net
    volumes:
      - ./Configuration:/app/Configuration
    healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:8080/api/health"]
        interval: 10s
        timeout: 5s
        retries: 5

  notesservice:
    build:
      context: .
      dockerfile: NotesService/Dockerfile
    ports:
      - "5003:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      patientservice:
        condition: service_healthy
      sqlserver:
        condition: service_healthy
      mongodb:
        condition: service_started
    networks:
      - diabete-net
    volumes:
      - ./Configuration:/app/Configuration


  riskreportservice:
    build:
        context: .
        dockerfile: RiskReportService/Dockerfile
    ports:
        - "5004:8080"
    environment:
        - ASPNETCORE_ENVIRONMENT=Development
    networks:
        - diabete-net
    


  microfrontend:
    build:
      context: .
      dockerfile: MicroFrontend/Dockerfile
    ports:
      - "5002:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - AccountApi__BaseUrl=http://patientservice:8080/api/
      - NotesApi__BaseUrl=http://notesservice:8080/api/
      - RiskApi__BaseUrl=http://riskservice:8080/api/
    depends_on:
      - patientservice
      - notesservice
    networks:
      - diabete-net

  
  ocelotgateway:
    build:
      context: .
      dockerfile: OcelotGateway/Dockerfile
    ports:
      - "5001:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      - patientservice
      - notesservice
    networks:
      - diabete-net

  sqlserver:
    build:
        context: .
        dockerfile: Dockerfile.sqlserver
    container_name: sqlserver
    environment:
        SA_PASSWORD: "CnUJ3ge0JAnwUH!A6ZP@r3&ERaW#8z^w"
        ACCEPT_EULA: "Y"
    ports:
        - "1433:1433"
    healthcheck:
        test: >
            /bin/bash -c "/opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P 'CnUJ3ge0JAnwUH!A6ZP@r3&ERaW#8z^w' -Q 'SELECT 1' || exit 1"
        interval: 10s
        timeout: 10s
        retries: 5
        start_period: 30s
    volumes:
        - sqlserverdata:/var/opt/mssql
    networks:
        - diabete-net


  mongodb:
    image: mongo
    container_name: mongodb
    restart: always
    ports:
      - "27017:27017"
    command: ["mongod", "--bind_ip_all"]
    volumes:
      - mongodb_data_container:/data/db
    networks:
      - diabete-net

volumes:
  sqlserverdata:
  mongodb_data_container:
